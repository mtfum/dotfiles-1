[user]
	name = muukii
	email = m@muukii.me
[merge]
    tool = vimdiff
	ff = false
[core]
	excludesfile = /Users/Muukii/.gitignore_global
	editor = vim
#[difftool "atom"]
#	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
[color]
	ui = auto
[pull]
	rebase = true
[branch]
	autosetuprebase = always
[push]
	default = current
[alias]
        alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort

		review = !git fetch && git checkout "$1"
# status/show (s)
        s  = status
        ss = status -s
        sh = show
# show status after add (a)
        a  = !git add .  && git status
        ad = !git add .  && git status
        au = !git add -u && git status
        aa = !git add .  && git add -u && git status
        ap = add -p
# commit (c)
        c   = commit
        ca  = commit -a
        cm  = commit -m
        cam = commit --amend
# checkout (ch)
        ch  = checkout
        chb = checkout -b
        chm = checkout master
        chd = checkout develop
# branch (b, br)
        b   = branch
        br  = branch
        ba  = branch -a                  # show all branches
        bra = branch -a                  # show all branches
        bm  = branch --merged            # already merged branches
        brm = branch --merged            # already merged branches
        bn  = branch --no-merged         # not merged branches
        brn = branch --no-merged         # not merged branches
# pull/fetch
        drag = pull --rebase
        ft   = fetch
# push
        po  = push origin
        pod = push origin develop
        pg  = push github
        pgm = push github master
        pgd = push github develop
        pb  = push bitbucket
        pbm = push bitbucket master
        pbd = push bitbucket develop
# rebase (rb)
        rbm = rebase master
        rbd = rebase develop
        rbc = rebase --continue
        rba = rebase --abort
# revert (rv)
        rv  = revert
        rvh = revert HEAD
# reset (rs)
        rs   = reset
        rsh  = reset --hard
        rss  = reset --soft
        rssh = reset --soft HEAD
        rshh = reset --hard HEAD
# log (l)
        l  = log --oneline --stat
        lp = log --oneline -p
        ls = log --stat --abbrev-commit -n 1 # display previous log
        lo = log origin
# log tree
        ln = log --graph --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset' --name-status
        lt = log --oneline --since="00:00:01" --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset'
        tr = log --graph --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset'
        ta = log --graph --branches --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset'
        tao = log origin --graph --branches --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset'
# diff (d)
        d  = diff
        di  = diff
        dm = diff master
        dw = diff --color-words
        d1 = diff HEAD~
        d2 = diff HEAD~2
        d3 = diff HEAD~3
# grep (gr)
        gr  = grep
        grn = grep -n
# stash (st)
        st  = stash
        stl = stash list
        stp = stash pop
        sts = stash save
# cherry-pick (chpk)
        chpk = cherry-pick
# util
        wip = !git add . && git add -u && git commit -m 'wip :D'
	bump = !git add . && git add -u && git commit -m 'Bump up'
        revise = !git add . && git add -u && git commit -m 'Revice'
        tidy = !git add . && git add -u && git commit -m 'Tidy up'
	update = !git add . && git add -u && git commit -m 'Update'
# hub 
        pr = pull-request
		ksdiff = !git difftool -y -t Kaleidoscope
# scripts
	findLargeFiles = !sh ~/dotfiles/scripts/git_find_big.sh
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
#driver for merging XCode project files
[merge "mergepbx"]
	name = XCode project files merger
	driver = mergepbx %O %A %B
[url "git@github.com:"]
	insteadOf = https://github.com/
#driver for merging XCode project files
[merge "mergepbx"]
	name = XCode project files merger
	driver = mergepbx %O %A %B
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[mergetool]
	keepBackup = false
